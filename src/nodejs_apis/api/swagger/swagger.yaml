swagger: "2.0"
info:
  version: "0.0.1"
  title: NodeJS APIs Example
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: "/v1"
# 
tags:
- name: "EventGrid"
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /swagger:
    x-swagger-pipe: swagger_raw
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /api/EventGrid/PushEvent:
    # binds a127 app logic to a route
    x-swagger-router-controller: event_grid
    post:
      tags:
      - "EventGrid"
      summary: "Publish an event on the Event Grid"
      description: Publish an event on the Event Grid
      # used as the method name of the controller
      operationId: eventgrid_pushevent
      parameters:
        - name: topicHostName
          in: query
          description: ''
          required: true
          type: string
        - name: id
          in: query
          description: ''
          required: true
          type: string
        - name: subject
          in: query
          description: ''
          required: true
          type: string
        - in: "body"
          name: data
          description: "EventData object will be transmitted"
          required: true
          schema:
            $ref: "#/definitions/ObjectData"
        - name: eventType
          in: query
          description: ''
          required: true
          type: string
        - name: dataVersion
          in: query
          description: ''
          required: true
          type: string
        - name: topicKey
          in: query
          description: ''
          required: true
          type: string
        - name: topic
          in: query
          description: ''
          required: true
          type: string
        - name: metadataVersion
          in: query
          description: ''
          required: true
          type: string
      responses:
        "200":
          description: 'Success'
          schema:
            $ref: "#/definitions/ObjectData"
        "400":
          description: 'Invalid Parameter Format'
        "406":
          description: 'Invalid Parameter Value'
        "500":
          description: 'Internal Error'
        default:
          description: 'Unknwown Error'

# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  ObjectData:
    type: object
